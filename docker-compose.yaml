version: '3'

services:
  # Zookeeper (pour Kafka)
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - microservices-network

  # Kafka avec connectivité interne corrigée
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

  # Base de données pour inscription-service
  inscription-db:
    image: mysql:8.0
    container_name: inscription-db
    environment:
      MYSQL_DATABASE: inscription_db
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      # Remove the MYSQL_USER: root line as it conflicts with MYSQL_ALLOW_EMPTY_PASSWORD
    ports:
      - "3306:3306"
    volumes:
      - inscription-db-data:/var/lib/mysql
    networks:
      - microservices-network

  # Base de données pour messagerie-service
  messagerie-db:
    image: mysql:8.0
    container_name: messagerie-db
    environment:
      MYSQL_DATABASE: messagerie_db
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      # Remove the MYSQL_USER: root line as it conflicts with MYSQL_ALLOW_EMPTY_PASSWORD
    ports:
      - "3307:3306"
    volumes:
      - messagerie-db-data:/var/lib/mysql
    networks:
      - microservices-network

  # Base de données pour notification-service
  notification-db:
    image: mysql:8.0
    container_name: notification-db
    environment:
      MYSQL_DATABASE: notification_db
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      # Remove the MYSQL_USER: root line as it conflicts with MYSQL_ALLOW_EMPTY_PASSWORD
    ports:
      - "3308:3306"
    volumes:
      - notification-db-data:/var/lib/mysql
    networks:
      - microservices-network

  # Base de données pour bourse-candidature-service
  bourse-candidature-db:
    image: mysql:8.0
    container_name: bourse-candidature-db
    environment:
      MYSQL_DATABASE: bourse_candidature_db
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      # Remove the MYSQL_USER: root line as it conflicts with MYSQL_ALLOW_EMPTY_PASSWORD
    ports:
      - "3309:3306"
    volumes:
      - bourse-candidature-db-data:/var/lib/mysql
    networks:
      - microservices-network

  # Service de découverte (Eureka)
  discovery-service:
    build:
      context: ./Excellia_bourse/discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - SERVER_PORT=8761
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-network

  # Service de configuration
  config-service:
    build:
      context: ./Excellia_bourse/config-service
      dockerfile: Dockerfile
    container_name: config-service
    ports:
      - "9998:9998"
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/Ballouk12/excellia_config.git
      - SERVER_PORT=9998
    depends_on:
      - discovery-service
    networks:
      - microservices-network

  # API Gateway
  gateway-service:
    build:
      context: ./Excellia_bourse/gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8888:8888"
    environment:
      - SERVER_PORT=8888
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9998
    depends_on:
      - discovery-service
    networks:
      - microservices-network

  # Service d'inscription
  inscription-service:
    build:
      context: ./Excellia_bourse/inscription-service
      dockerfile: Dockerfile
    container_name: inscription-service
    environment:
      - SERVER_PORT=8085
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9998
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:mysql://inscription-db:3306/inscription_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    depends_on:
      - discovery-service
      - kafka
      - inscription-db
      - config-service
    networks:
      - microservices-network

  # Service de messagerie
  messagerie-service:
    build:
      context: ./Excellia_bourse/messagerie-service
      dockerfile: Dockerfile
    container_name: messagerie-service
    environment:
      - SERVER_PORT=8086
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9998
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:mysql://messagerie-db:3306/messagerie_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    depends_on:
      - discovery-service
      - kafka
      - messagerie-db
      - config-service
    networks:
      - microservices-network

  # Service de gestion des bourses et candidatures
  gestion-bourse-candidature-service:
    build:
      context: ./Excellia_bourse/gestion-bourse-candidature-service
      dockerfile: Dockerfile
    container_name: gestion-bourse-candidature-service
    environment:
      - SERVER_PORT=8084
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9998
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:mysql://bourse-candidature-db:3306/bourse_candidature_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    depends_on:
      - discovery-service
      - kafka
      - bourse-candidature-db
      - config-service
    networks:
      - microservices-network

  # Service de notification
  notification-service:
    build:
      context: ./Excellia_bourse/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    environment:
      - SERVER_PORT=8087
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-service:9998
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:mysql://notification-db:3306/notification_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    depends_on:
      - discovery-service
      - kafka
      - notification-db
      - config-service
    networks:
      - microservices-network


  # Frontend Next.js
  frontend:
    build:
      context: ./Excellia_Frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://gateway-service:8888
    depends_on:
      - gateway-service
      - discovery-service
      - kafka
      - config-service
      - gestion-bourse-candidature-service
      - messagerie-service
      - notification-service
      - inscription-service
    networks:
      - microservices-network

volumes:
  inscription-db-data:
  messagerie-db-data:
  notification-db-data:
  bourse-candidature-db-data:
  uploads-volume: 

networks:
  microservices-network:
    driver: bridge